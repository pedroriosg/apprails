#### V1 ####

# worker_processes 1;
# # daemon off;
# events { worker_connections 1024; }

# http {
#   sendfile on;
#   upstream app {
#     server app:3000;
#   }

#   server {
#     listen 80;
#     server_name buyingnewsoul.me;
#     return 301 https://$host$request_uri;
#   }

#   server {
#     listen 443 ssl;
#     server_name buyingnewsoul.me;

#     ssl_certificate /certbot/etc/letsencrypt/live/buyingnewsoul.me/fullchain.pem;
#     ssl_certificate_key /certbot/etc/letsencrypt/live/buyingnewsoul.me/privkey.pem;

#     location / {
#       proxy_pass http://app;
#       proxy_set_header Host $host;
#       proxy_set_header X-Real-IP $remote_addr;
#       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#       proxy_set_header X-Forwarded-Proto $scheme;
#     }
#   }
# }


##### V2 #####

# worker_processes 1;
# events { worker_connections 1024; }

# http {
#     sendfile on;
#     upstream app {
#         server app:3000;
#     }
#     server {

#             root /var/www/buyingnewsoul.me;
#             # index index.html index.htm index.nginx-debian.html;

#             server_name buyingnewsoul.me www.buyingnewsoul.me;

#             location / {
#                     try_files $uri $uri/ =404;
#             }

#         listen [::]:443 ssl ipv6only=on; # managed by Certbot
#         listen 443 ssl; # managed by Certbot
#         ssl_certificate /certbot/etc/letsencrypt/live/buyingnewsoul.me/fullchain.pem; # managed by Certbot
#         ssl_certificate_key /certbot/etc/letsencrypt/live/buyingnewsoul.me/privkey.pem; # managed by Certbot
#         include /certbot/etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#         ssl_dhparam /certbot/etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


#     }

#     server {
#             if ($host = www.buyingnewsoul.me) {
#                     return 301 https://$host$request_uri;
#             } # managed by Certbot


#             if ($host = buyingnewsoul.me) {
#                     return 301 https://$host$request_uri;
#             } # managed by Certbot


#             listen 80;
#             listen [::]:80;

#             server_name buyingnewsoul.me www.buyingnewsoul.me;
#             return 404; # managed by Certbot
#     }
# }

##### V3 #####
http {
  sendfile on;
  upstream app {
    server localhost:3000;
  }

  server {
    listen 80;
    server_name localhost;

    return 301 https://$host$request_uri;
  }

  server {
    listen       443 ssl http2;
    listen       [::]:443 ssl http2;
    server_name  buyingnewsoul.me;
    root         /usr/share/nginx/html;
  #
    ssl_certificate "/certbot/etc/letsencrypt/live/buyingnewsoul.me/fullchain.pem";
    ssl_certificate_key "/certbot/etc/letsencrypt/live/buyingnewsoul.me/privkey.pem";
    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout  10m;
    ssl_ciphers PROFILE=SYSTEM;
    ssl_prefer_server_ciphers on;
    client_max_body_size 100M;
  #
  #        # Load configuration files for the default server block.
  #
    error_page 404 /404.html;
    location = /404.html {
    }
  #
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }
    location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_pass http://app;
    proxy_redirect off;
    }
  }
}