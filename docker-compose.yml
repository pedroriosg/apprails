version: '3.1'

services:
  # The containers we are going to run
  app:
    build:
      context: ./app/ # The path in the machine that have the files, in this case root
      dockerfile: Dockerfile # The name of the Dockerfile definition
    container_name: app
    volumes:
      - ./:/app/src # To copy changes in the local machine to the container.
    ports:
      - "3000:3000" # To expose the app to the machine localhost (machine-port:container:port)
    networks:
      - app-network # Connect the app to the network, in this case to use the database
    depends_on:
      # Build dependencies in case one containers needs another to be builded first
      - db # To build after the database
    # environment:
    #   DB_HOST: db.xvqoshdqjbmzczbvmtde.supabase.co
    #   DB_NAME: postgres
    #   DB_USER: postgres
    #   DB_PASSWORD: Atrevete2020
    #   JWT_SECRET: 436c42481440f6eb1efb6ec4e945287437d150f9ab673f9315595c3e4b8e86e9

    restart: unless-stopped

  db:
    # The database service
    image: postgres # Using the oficial dockerhub image
    container_name: db
    ports:
      - 5432:5432
    networks:
      - app-network # Connect to the network to be used by other containers (ej: the web server)
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=atrevete
    restart: unless-stopped
    volumes:
      # To persist the data in the database we have a volume that persist after container deletion
      - db-volume:/var/lib/postgresql/data
  
  # nginx:
  #   image: nginx:1.15-alpine
  #   command: /bin/ash -c "exec nginx -g 'daemon off;'"
  #   expose:
  #     - "80"
  #     - "443"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./data/nginx:/etc/nginx/conf.d
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - /var/www/certbot:/var/www/certbot
  #   networks:
  #     - app-network


  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - /etc/letsencrypt:/etc/letsencrypt
  #     - /var/www/certbot:/var/www/certbot
  # certbot:
  #   image: certbot/certbot
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - ./certbot.sh:/certbot.sh
  #   networks:
  #     - app-network
  #   entrypoint: "/certbot.sh"

  # nginx:
  #   image: nginx
  #   container_name: nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - /etc/letsencrypt:/certbot/etc/letsencrypt
  #     - /var/lib/letsencrypt:/certbot/var/lib/letsencrypt
  #     - ./app:/usr/share/nginx/html:ro
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - app
  #     # - certbot
  #   networks:
  #     - app-network
networks:
  # All the networks that connects our containers
  app-network:
    driver: bridge


volumes:
  # All the named volumes needed to persist data after container deletion
  db-volume:



